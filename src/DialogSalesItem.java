
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author King-David
 */
public class DialogSalesItem extends javax.swing.JDialog {
    private static String username;

    /**
     * Creates new form DialogSalesItem
     */
    DBEngine db = new DBEngine();
    SimpleDateFormat df = new SimpleDateFormat("dd-MMM-yyyy");
    
    int totalSells = 0;
    int totalCosts = 0;
    
    public DialogSalesItem(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadItem();
        tryUser();
    }
    
    public void tryUser(){
        try{
            if(!username.equalsIgnoreCase("admin")){
                jLabel1.setVisible(false);
                txtTotalCost.setVisible(false);
                
                jLabel2.setVisible(false);
                txtSellingPrice.setVisible(false);
                
                jLabel6.setVisible(false);
                txtReturn.setVisible(false);
                
                jLabel3.setVisible(false);
                txtProfit.setVisible(false);
            }
                //
        }catch(Exception exp){
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void loadItem(){
        try{
            Date date = new Date();
            dcDate.setDate(df.parse(df.format(date).toString()));
            String strDate = df.format(date);
            
            loadReturn(strDate);
            loadTable(strDate);
            
        }catch(Exception exp){
            JOptionPane.showMessageDialog(rootPane,exp.getMessage());
        }
    }
    
    private void loadTable(String strDate){
        try{
            String tableName = "ss_sold";
            String colums = "*";
            String where = "time = '"+strDate+"'";
            String order = "";

            ResultSet rs = db.runSelect(tableName, colums, where, order);

            String[] colTitle = {"ID","ITEM SOLD","S PERSON ","UNIT","DATE","TIME","QTY","AMOUNT"};
            String[] columns = {"id","itemName","SELLER","unit","time","TIM","qty","amount"};

            DefaultTableModel model = db.fillTable(rs, columns, colTitle);
            tbSold.setModel(model); 
            
            tbSold.setAutoResizeMode(tbSold.AUTO_RESIZE_OFF);
            tbSold.getColumnModel().getColumn(0).setPreferredWidth(50);
            
            tbSold.getColumnModel().getColumn(1).setPreferredWidth(150);
            tbSold.getColumnModel().getColumn(2).setPreferredWidth(90);
            tbSold.getColumnModel().getColumn(3).setPreferredWidth(80);
            tbSold.getColumnModel().getColumn(4).setPreferredWidth(90);
            tbSold.getColumnModel().getColumn(5).setPreferredWidth(80);
            tbSold.getColumnModel().getColumn(6).setPreferredWidth(50);
            tbSold.getColumnModel().getColumn(7).setPreferredWidth(80);
            
            
            //tbSold;
            
            ResultSet rss = db.runSelect(tableName, colums, where, order);
            double totalCost = 0;
            double totalAmt = 0;
            double totalProfit = 0;
            
            while(rss.next()){
                totalCost += getCost(rss.getString("itemName"))*Integer.parseInt(rss.getString("qty"));
                totalAmt += Double.parseDouble(rss.getString("amount"));
            }
            
            totalAmt    = totalAmt - totalSells;
            totalCost   = totalCost-totalCosts;
            totalProfit = totalAmt - totalCost;
            
            
            txtTotalCost.setText(""+totalCost);
            txtSellingPrice.setText(""+totalAmt);
            txtProfit.setText(""+totalProfit);
                    
            
        }catch(Exception exp){
            JOptionPane.showMessageDialog(rootPane,exp.getMessage());
        }
    }
    
    private void loadReturn(String strDate){
        try{
            String tableName = "SS_RETURN";
            String colums = "*";
            String where = "time = '"+strDate+"'";
            String order = "";

            ResultSet rs = db.runSelect(tableName, colums, where, order);

            String[] colTitle = {"ITEM","DATE","TIME","QTY","REASON"};
            String[] columns =  {"ITEM","TIME","NOW","QTY","REASON"};

            DefaultTableModel model = db.fillTable(rs, columns, colTitle);
            tbReturned.setModel(model); 
            
            ResultSet rss = db.runSelect(tableName, colums, where, order);
            
            
            while(rss.next()){
               totalSells +=Integer.parseInt(rss.getString("AMT"));
               totalCosts +=Integer.parseInt(rss.getString("COST"));
            }
            
//           System.out.println("Total Sales :"+totalSells);
//           System.out.println("Total Cost  :"+totalCosts);
           
           txtReturn.setText(""+totalSells);
            
        }catch(Exception exp){
            //JOptionPane.showMessageDialog(rootPane,exp.getMessage());
            exp.printStackTrace();
        }
    }
    //get the cost from the itemtype
    private double getCost(String item) throws Exception{
        String tableName = "ss_itemType";
        String columns = "*";
        String where = "itemName = '"+item+"'";
        String order = "";
        
        ResultSet rs = db.runSelect(tableName, columns, where, order);
        double cost = 0;
        if(rs.next())
            cost = Double.parseDouble(rs.getString("costPrice"));
        return cost;
    }
    
    private String[] getHeader() throws Exception{
        String tableName = "ss_settings";
        String columns = "*";
        String where = "id = 1";
        String order = "";
        
        ResultSet rs = db.runSelect(tableName, columns, where, order);
        String[] header = new String[3];
        if(rs.next()){
            header[0] = rs.getString("name");
            header[1] = rs.getString("address");
            header[2] = rs.getString("phone");
        }
        
        return header;
    }
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbSold = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        txtTotalCost = new javax.swing.JTextField();
        txtSellingPrice = new javax.swing.JTextField();
        txtProfit = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        dcDate = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbReturned = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtReturn = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sold Items");
        setResizable(false);

        tbSold.setAutoCreateRowSorter(true);
        tbSold.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbSold);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/printer2.png"))); // NOI18N
        jButton1.setText("Print Report");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtTotalCost.setEditable(false);
        txtTotalCost.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtSellingPrice.setEditable(false);
        txtSellingPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtProfit.setEditable(false);
        txtProfit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Total Cost Price");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Total Selling Price");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Profit(N)");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/check2.png"))); // NOI18N
        jButton2.setText("Go");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Date:");

        tbReturned.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tbReturned);

        jLabel5.setFont(new java.awt.Font("Cantarell", 0, 15)); // NOI18N
        jLabel5.setForeground(java.awt.Color.black);
        jLabel5.setText("Returned Item");

        txtReturn.setEditable(false);
        txtReturn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Return Total");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(txtTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtSellingPrice))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(txtProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dcDate, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(dcDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(txtTotalCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSellingPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtProfit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtReturn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            Date date = dcDate.getDate();
            String strDate = df.format(date);
            
            loadTable(strDate);
        }catch(Exception exp){
            JOptionPane.showMessageDialog(rootPane, exp.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            tbSold.print();
            tbReturned.print();
        }catch(Exception exp){
           // JOptionPane.showMessageDialog(rootPane,exp.getMessage());
            exp.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private ResultSet getSales(String val) throws Exception{
        String tableName = "ss_sold";
        String columns = "*";
        String where = "time = '"+val+"'";
        String order = "";
            
        
        ResultSet rs = db.runSelect(tableName, columns, where, order);
        return rs;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogSalesItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogSalesItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogSalesItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogSalesItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        username = args[0];

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogSalesItem dialog = new DialogSalesItem(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dcDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbReturned;
    private javax.swing.JTable tbSold;
    private javax.swing.JTextField txtProfit;
    private javax.swing.JTextField txtReturn;
    private javax.swing.JTextField txtSellingPrice;
    private javax.swing.JTextField txtTotalCost;
    // End of variables declaration//GEN-END:variables
}
