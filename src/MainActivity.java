
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author David Iruafeimi
 */
public class MainActivity extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
     static String username = "";
    
    public MainActivity() {
       
        if(!username.isEmpty()){
            initComponents();
            setIcon();
            loadTable();
            loadDate();
            checkPrivilege();
            txtEvent.requestFocus();
        }
    }
    
    public DBEngine db = new DBEngine();
    Connection con = DBEngine.runConnect();
    SimpleDateFormat df = new SimpleDateFormat("dd-MMM-yyyy");
    SimpleDateFormat tf = new SimpleDateFormat("hh:mm a");
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public String getProduct(String barCode) throws Exception{
        
        ResultSet rs = db.runSelect("SS_STOCKED", "*", "ITM_BARCODE = '"+barCode+"'", "");
        rs.next();
        return rs.getString("ITM_NAME");
    }
    
    public int getQunty(String barCode) throws Exception{
        ResultSet rs    = db.runSelect("SS_STOCKED", "*", "ITM_BARCODE = '"+barCode+"'", "");
        int qty = 0;
        if(rs.next()){
            qty = Integer.parseInt(rs.getString("ITM_QTY"));
        }
         
         return qty;
    }
    
    private void checkPrivilege(){
        if(!username.equals("admin")){
            btnManageItem.setEnabled(false);
            btnPurchase.setEnabled(false);
            btnVendor.setEnabled(false);
            
            btnMManage.setEnabled(false);
            btnMPurchase.setEnabled(false);
            btnMVendor.setEnabled(false);
            btnMUsers.setEnabled(false);
            btnMExpenses.setEnabled(false);
            btnMSettings.setEnabled(false);
        }
    }
    public void setIcon(){
        try{
            Image ico = ImageIO.read(getClass().getResource("shop.png"));
            setIconImage(ico);
        }catch(Exception exp){
            exp.printStackTrace();
        }
    }
    private void loadTable(){
        try{
            String tableName = "ss_stocked";
            String columns = "*";
            String where = "";
            String order = "";
            
            ResultSet rs = db.runSelect(tableName, columns, where, order);
            String[] column = {"itm_name","itm_unit","itm_qty"};
            String[] colTitle = {"ITEM","UNIT","QTY"};
            
            
           
            DefaultTableModel model = db.fillTable(rs, column, colTitle);
            tbProducts.setModel(model);
            
        }catch(Exception exp){
            JOptionPane.showMessageDialog(rootPane,""+exp.getMessage());
        }
    }
    
    
    
    private void loadCart(){
        try{
            String tableName = "ss_cart";
            String columns = "*";
            String where = "";
            String order = "";
            
            ResultSet rs = db.runSelect(tableName, columns, where, order);
            String[] column = {"itemName","unit","qty","amount"};
            String[] colTitle = {"ITEM","UNIT","QTY","AMOUNT(N)"};
            
            
           
            DefaultTableModel model = db.fillTable(rs, column, colTitle);
            tbCart.setModel(model);
            
            
        }catch(Exception exp){
            JOptionPane.showMessageDialog(rootPane,""+exp.getMessage());
        }
    }
    
    private double getAmount(String item) throws Exception{
        String tableName = "ss_itemType";
        String colums = "*";
        String where = "";
        String order = "";
        double amount = 0;
            
        ResultSet rs =  db.runSelect(tableName, colums, where, order);
        while(rs.next()){
            if(rs.getString("itemName").equalsIgnoreCase(item)){
                amount = rs.getInt("sellingPrice");
                break;
            }
        }
        
        return amount;
    }
    
    private int ammt(String itm) throws Exception{
        int ret = 0;
        ResultSet rs = db.runSelect("ss_itemtype","*","", "");
        
        return ret;
    }
    
    private double getTotal() throws Exception{
        String tableName = "ss_cart";
        String columns  = "*";
        String where = "";
        String order = "";
        
        ResultSet rs = db.runSelect(tableName, columns, where, order);
        double amount = 0;
        while(rs.next()){
            amount += Double.parseDouble(rs.getString("amount"));
        }
        return amount;
    }
    
    private String format(double price) throws Exception{
        DecimalFormat df = new DecimalFormat("###,###,###.00");
        return df.format(price);
    }
    
    private int checkCart(String item) throws Exception{
        String tableName = "ss_cart";
        String columns = "*";
        String where = "itemName = '"+item+"'";
        String order = "";
        
        ResultSet rs = db.runSelect(tableName, columns, where, order);
        int qty = 0;
        if(rs.next()){
            qty = Integer.parseInt(rs.getString("qty"));
            return qty;
        }else{
            return 0;
        }
    }
    
    private boolean sell(String cartTable, String soldTable) throws Exception{
        String cTable = cartTable;
        String sTable = soldTable;
        
        //Variables for Selecting from Cart table
        String colums = "*";
        String where = "";
        String order = "";
        //Date of Sales
        Date date = new Date();
        String sellDate = df.format(date);
        //Variable for inserting into sold table
        String[] cols = {"itemName","unit","time","qty","amount"};
        
        
        ResultSet rsCart = db.runSelect(cTable, colums, where, order);
        
        while(rsCart.next()){
            String item = rsCart.getString("itemName");
            String unit = rsCart.getString("unit");
            String time = sellDate;
            String qty = rsCart.getString("qty");
            String amt = rsCart.getString("amount");
            
            String[] items = {item,unit,time,qty,amt};
            updateStocked(item, qty);
            
            
            //db.runInsert(sTable, cols, items);
            
            int qty2    = rsCart.getInt("qty");
            int amt2    = rsCart.getInt("amount");
            String tim  = tf.format(new Date());
            
            String query = "INSERT INTO ss_sold(ITEMNAME, UNIT, TIME, TIM, QTY, AMOUNT, SELLER) VALUES(?,?,?,?,?,?,?)";
            PreparedStatement ps = con.prepareStatement(query);
            ps.setString(1, item);
            ps.setString(2, unit);
            ps.setString(3, time);
            ps.setString(4, tim);
            ps.setInt(5, qty2);
            ps.setInt(6, amt2);
            ps.setString(7, username);
            ps.execute();
            
        }
        
        rsCart.close();
        db.runTruncate(cTable);
        
        
        return true;
    }
    
    private void updateStocked(String item, String qty) throws Exception{
        String tableName = "ss_stocked";
        String col[] = {"itm_qty"};
       
        String where = "itm_name = '"+item+"'";
        int newQty = getQty(item) - Integer.parseInt(qty);
        String val[] = {""+newQty};
        db.runUpdate(tableName, col, val, where);
    }
    
    private int getQty(String item) throws Exception{
        String tableName = "ss_stocked";
        String cols = "*";
        String where = "itm_name = '"+item+"'";
        String order = "";
        
        
        ResultSet rs = db.runSelect(tableName, cols, where, order);
        String qty = null;
        if(rs.next()){
            qty = rs.getString("itm_qty");
        }
        
        return Integer.parseInt(qty);
    }
    
    private void loadDate(){
        try{
            Date date = new Date();
            lbDate.setText("Today : "+df.format(date));
        }catch(Exception exp){
            JOptionPane.showMessageDialog(rootPane, exp.getMessage());
        }
    }
    
    private String[] getHeader() throws Exception{
        String tableName = "ss_settings";
        String columns = "*";
        String where = "id = 1";
        String order = "";
        
        ResultSet rs = db.runSelect(tableName, columns, where, order);
        String[] header = new String[3];
        if(rs.next()){
            header[0] = rs.getString("name");
            header[1] = rs.getString("address");
            header[2] = rs.getString("phone");
        }
        
        return header;
    }
    
    private void printRecept(){
        try{
            String tableName = "ss_cart";
            String columns = "*";
            String where = "";
            String order = "";
            
            String header[] = getHeader();
            
            String name  = header[0].toUpperCase();
            String addr  = "ADD:"+header[1].toUpperCase();
            String phone = "TEL:"+header[2].toUpperCase();
            String time = "TIM:"+new Date().toLocaleString()+"\n";
            
            String head1 = String.format("%1s  %10s %10s\n", "",name,"");
            String head2 = String.format("%1s  %10s %10s\n", "",addr,"");
            String head3 = String.format("%1s  %10s %10s\n", "",phone,"");
            String head4 = String.format("%1s  %10s %10s\n", "",time,"");
            
            String head = head1+head2+head3+head4;
            
            ResultSet rs = db.runSelect(tableName, columns, where, order);
            
            String s = String.format("%-15s %5s %12s\n", "Item", "Qty", "Price(N)");
            String s1 = String.format("%-15s %5s %12s\n", "------", "---", "---------");
            String s2 = String.format("%-15s %5s %12s\n", "------", "", "---------");
            String msg = "\n\nThanks for your petronage,\n  Please call again";
            
            String output =head + s + s1;
            int total = 0;
            int lines = 4;
            
            while(rs.next()){
                output += String.format("%-15s %5s %12s\n", rs.getString("ITEMNAME"), rs.getString("QTY"), format(Double.parseDouble(rs.getString("AMOUNT"))));
                total += rs.getInt("AMOUNT");
                lines += 1;
            }
            
            output += s2 + String.format("%-15s %5s %12s\n", "Total","",format(Double.parseDouble(""+total)));
            output+=s2 + msg;
           // System.out.println(output);
            
            JTextPane tpPrint = new JTextPane();
            tpPrint.setText(output);
            
          //tpPrint.print();

            int margin = 2;
            PrinterJob printerJob = PrinterJob.getPrinterJob();
            PageFormat pageFormat = printerJob.defaultPage();
            Paper paper = new Paper();
            paper.setSize(180.0, (double) (paper.getHeight() + lines * 10.0));
            paper.setImageableArea(margin, margin, paper.getWidth() - margin * 2, paper.getHeight() - margin * 2);
            pageFormat.setPaper(paper);
            pageFormat.setOrientation(PageFormat.PORTRAIT);
            printerJob.setPrintable(tpPrint.getPrintable(null, null), pageFormat);
            
            printerJob.print();
            printerJob.print();
            
        }catch(Exception exp){
            JOptionPane.showMessageDialog(rootPane, exp.getMessage());
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnManageItem = new javax.swing.JButton();
        btnPurchase = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btnVendor = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbTitle = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbPayment = new javax.swing.JLabel();
        lbTotal = new javax.swing.JLabel();
        lbChange = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lbDate = new javax.swing.JLabel();
        lbTime = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        txtPaid = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton11 = new javax.swing.JButton();
        btnMManage = new javax.swing.JButton();
        btnMPurchase = new javax.swing.JButton();
        btnMVendor = new javax.swing.JButton();
        btnMUsers = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        btnMExpenses = new javax.swing.JButton();
        btnMSettings = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCart = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbProducts = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        txtProduct = new javax.swing.JTextField();
        txtQty = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        txtProductAdd = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtUnit = new javax.swing.JTextField();
        txtEvent = new javax.swing.JTextField();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Small Market");
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jPanel1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel1FocusGained(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tasks", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13))); // NOI18N
        jPanel2.setFocusable(false);

        btnManageItem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnManageItem.setText("Manage Item");
        btnManageItem.setFocusable(false);
        btnManageItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageItemActionPerformed(evt);
            }
        });

        btnPurchase.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPurchase.setText("Add Purchase");
        btnPurchase.setFocusable(false);
        btnPurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPurchaseActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setText("Sold Items");
        jButton4.setFocusable(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        btnVendor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnVendor.setText("Manage Vendor");
        btnVendor.setFocusable(false);
        btnVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVendorActionPerformed(evt);
            }
        });

        jButton17.setFont(new java.awt.Font("Cantarell", 0, 16)); // NOI18N
        jButton17.setText("Returned Item");
        jButton17.setFocusable(false);
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnManageItem, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPurchase, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnVendor, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addGap(7, 7, 7)
                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnManageItem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPurchase)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVendor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 255, 0));
        jLabel1.setText("Payment:");

        lbTitle.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        lbTitle.setForeground(new java.awt.Color(153, 255, 0));
        lbTitle.setText("Sub Total:  N");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("Change:");

        lbPayment.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbPayment.setForeground(new java.awt.Color(153, 255, 0));
        lbPayment.setText("N 0.00");

        lbTotal.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        lbTotal.setForeground(new java.awt.Color(153, 255, 0));
        lbTotal.setText("0.00");

        lbChange.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbChange.setForeground(new java.awt.Color(255, 0, 0));
        lbChange.setText("N 0.00");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbChange, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lbPayment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lbChange))
                        .addGap(0, 3, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbTotal)
                            .addComponent(lbTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));

        lbDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbDate.setForeground(new java.awt.Color(153, 255, 0));
        lbDate.setText("Todays Date");

        lbTime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbTime.setForeground(new java.awt.Color(153, 255, 0));
        lbTime.setText("Time Now");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbTime)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDate)
                    .addComponent(lbTime))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Payment Section", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13))); // NOI18N

        txtPaid.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtPaid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPaidFocusLost(evt);
            }
        });
        txtPaid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPaidKeyReleased(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/good.png"))); // NOI18N
        jButton5.setText("Paid");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Cash Tendered");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPaid)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPaid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
        );

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sales.png"))); // NOI18N
        jButton11.setText("Sold Itms");
        jButton11.setFocusable(false);
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton11);

        btnMManage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/manage.png"))); // NOI18N
        btnMManage.setText("Manage");
        btnMManage.setFocusable(false);
        btnMManage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMManage.setPreferredSize(new java.awt.Dimension(65, 56));
        btnMManage.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMManageActionPerformed(evt);
            }
        });
        jToolBar1.add(btnMManage);

        btnMPurchase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/purchase.png"))); // NOI18N
        btnMPurchase.setText("Purchase");
        btnMPurchase.setFocusable(false);
        btnMPurchase.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMPurchase.setPreferredSize(new java.awt.Dimension(70, 55));
        btnMPurchase.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMPurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMPurchaseActionPerformed(evt);
            }
        });
        jToolBar1.add(btnMPurchase);

        btnMVendor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vendor.png"))); // NOI18N
        btnMVendor.setText("Vendor");
        btnMVendor.setFocusable(false);
        btnMVendor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMVendor.setPreferredSize(new java.awt.Dimension(60, 59));
        btnMVendor.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMVendorActionPerformed(evt);
            }
        });
        jToolBar1.add(btnMVendor);

        btnMUsers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/businessman2.png"))); // NOI18N
        btnMUsers.setText("Users");
        btnMUsers.setFocusable(false);
        btnMUsers.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMUsers.setPreferredSize(new java.awt.Dimension(60, 56));
        btnMUsers.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMUsersActionPerformed(evt);
            }
        });
        jToolBar1.add(btnMUsers);

        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/report.png"))); // NOI18N
        jButton20.setText("Report");
        jButton20.setFocusable(false);
        jButton20.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton20.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton20);

        btnMExpenses.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hand_money.png"))); // NOI18N
        btnMExpenses.setText("Expenses");
        btnMExpenses.setFocusable(false);
        btnMExpenses.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMExpenses.setMaximumSize(new java.awt.Dimension(60, 56));
        btnMExpenses.setPreferredSize(new java.awt.Dimension(75, 56));
        btnMExpenses.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMExpenses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMExpensesActionPerformed(evt);
            }
        });
        jToolBar1.add(btnMExpenses);

        btnMSettings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/setts.png"))); // NOI18N
        btnMSettings.setText("Settings");
        btnMSettings.setFocusable(false);
        btnMSettings.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMSettings.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMSettingsActionPerformed(evt);
            }
        });
        jToolBar1.add(btnMSettings);

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pass.png"))); // NOI18N
        jButton13.setText("Password");
        jButton13.setFocusable(false);
        jButton13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton13.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton13);

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_disk.png"))); // NOI18N
        jButton15.setText("Back up");
        jButton15.setFocusable(false);
        jButton15.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton15.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton15);

        jButton19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_add.png"))); // NOI18N
        jButton19.setText("Restore");
        jButton19.setFocusable(false);
        jButton19.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton19.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton19);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/exit.png"))); // NOI18N
        jButton9.setText("    Exit   ");
        jButton9.setFocusable(false);
        jButton9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton9);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Market", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        tbCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbCart);

        tbProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProductsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbProducts);

        txtProduct.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProductKeyReleased(evt);
            }
        });

        txtQty.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/plus.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minus.png"))); // NOI18N
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        txtProductAdd.setEditable(false);
        txtProductAdd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtProductAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProductAddKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Search:");

        txtUnit.setEditable(false);
        txtUnit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtEvent.setForeground(java.awt.Color.white);
        txtEvent.setOpaque(false);
        txtEvent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEventKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(7, 7, 7)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addComponent(txtProductAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtUnit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQty)
                                .addGap(2, 2, 2))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtProduct)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtEvent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProductAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnManageItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageItemActionPerformed
        try{
            String[] args = null;
            DialogManageItems.main(args);
        }catch(Exception exp){
            JOptionPane.showMessageDialog(null,exp.getMessage());
        }
    }//GEN-LAST:event_btnManageItemActionPerformed

    private void btnMManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMManageActionPerformed
        try{
            String[] args = null;
            DialogManageItems.main(args);
        }catch(Exception exp){
            JOptionPane.showMessageDialog(null,exp.getMessage());
        }
    }//GEN-LAST:event_btnMManageActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
         try{
            String[] args = null;
            DialogSalesItem.main(args);
        }catch(Exception exp){
            JOptionPane.showMessageDialog(null,exp.getMessage());
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        try{
            String[] args = {username};
            DialogPassword.main(args);
        }catch(Exception exp){
            JOptionPane.showMessageDialog(null,exp.getMessage());
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void btnMSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMSettingsActionPerformed
        try{
            String[] args = null;
            DialogSettings.main(args);
        }catch(Exception exp){
            JOptionPane.showMessageDialog(null, exp.getMessage());
        }
    }//GEN-LAST:event_btnMSettingsActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try{
            String[] args = {username};
            DialogSalesItem.main(args);
        }catch(Exception exp){
            JOptionPane.showMessageDialog(null,exp.getMessage());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnPurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPurchaseActionPerformed
        try{
            String[] args = null;
            DialogPurchase.main(args);
//            DialogLog.main(args);
        }catch(Exception exp){
            JOptionPane.showMessageDialog(null,exp.getMessage());
        }
    }//GEN-LAST:event_btnPurchaseActionPerformed

    private void btnMPurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMPurchaseActionPerformed
        try{
            String[] args = null;
            DialogPurchase.main(args);
        }catch(Exception exp){
            JOptionPane.showMessageDialog(null,exp.getMessage());
        }
    }//GEN-LAST:event_btnMPurchaseActionPerformed

    private void btnVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVendorActionPerformed
        try{
            String[] args = null;
            DialogVendor.main(args);
        }catch(Exception exp){
            JOptionPane.showMessageDialog(rootPane,exp.getMessage());
        }
    }//GEN-LAST:event_btnVendorActionPerformed

    private void btnMVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMVendorActionPerformed
        try{
            String args[] = null;
            DialogVendor.main(args);
        }catch(Exception exp){
            JOptionPane.showMessageDialog(rootPane,exp.getMessage());
        }
    }//GEN-LAST:event_btnMVendorActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void txtProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductKeyReleased
        String vals = txtProduct.getText().trim();
        try{
            
            String tableName = "ss_stocked";
            String columns = "itm_name, itm_unit, itm_qty";
            String where = "itm_Name LIKE '"+vals+"%'";
            String order = "";
            
            ResultSet rs = db.runSelect(tableName, columns, where, order);
            String[] colums = {"itm_name","itm_unit","itm_qty"};
            String[] colTitle = {"ITEM","UNIT","QTY"};
            
            DefaultTableModel model = db.fillTable(rs, colums, colTitle);
            tbProducts.setModel(model);
            
        }catch(Exception exp){
           // JOptionPane.showMessageDialog(rootPane,exp.getMessage());
            exp.printStackTrace();
        }
    }//GEN-LAST:event_txtProductKeyReleased

    private void txtProductAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProductAddKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProductAddKeyReleased

    private void tbProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProductsMouseClicked
        try{
            int row = tbProducts.getSelectedRow();
            String product = tbProducts.getValueAt(row, 0).toString();
            String unit = tbProducts.getValueAt(row,1).toString();
            
            txtProductAdd.setText(product);
            txtUnit.setText(unit);
            txtQty.setText("");
                        
        }catch(Exception exp){
            JOptionPane.showMessageDialog(rootPane, ""+exp.getMessage());
        }
    }//GEN-LAST:event_tbProductsMouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try{
            int row = tbProducts.getSelectedRow();
            String product = tbProducts.getValueAt(row, 0).toString();
            int inQty = Integer.parseInt(tbProducts.getValueAt(row,2).toString());
            
            String itemName  = txtProductAdd.getText();
            String unit = txtUnit.getText();
            String qanty = txtQty.getText();
            
            if(itemName.isEmpty() || unit.isEmpty()){
                JOptionPane.showMessageDialog(rootPane, "Please selected a product");
            }else if(qanty.isEmpty()){
                JOptionPane.showMessageDialog(rootPane, "Please enter the quantity");
            }else if(Integer.parseInt(qanty)>inQty){
                JOptionPane.showMessageDialog(rootPane, "Not enough Item in store");
            }else{
                
                double amt = getAmount(itemName);

                int quant = checkCart(itemName);
                
                if(quant==0){
                    int qty = Integer.parseInt(qanty);
                    int totalAmt =(int)(qty*amt);
                    
                    String tableName = "ss_cart";
                    String columns[] = {"itemName","unit","qty","amount"};
                    String values[] = {itemName,unit,""+qty,""+totalAmt};
                    
                    db.runInsert(tableName, columns, values);
                }else{
                    int qty = Integer.parseInt(qanty)+quant;
                    int totalAmt =(int)(qty*amt);
                    
                    String tableName = "ss_cart";
                    String columns[] = {"itemName","unit","qty","amount"};
                    String values[] = {itemName,unit,""+qty,""+totalAmt};
                    String where = "itemName = '"+itemName+"'";
                    db.runUpdate(tableName, columns, values, where);
                    
                }
                
                loadCart();
                double amount = getTotal();
                lbTotal.setText(format(amount));
            }
        }catch(Exception exp){
            JOptionPane.showMessageDialog(rootPane, ""+exp.getMessage());
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        try{
            int row = tbCart.getSelectedRow();
            int col = 0;
            
            String value = tbCart.getValueAt(row,col).toString();
            String tableName = "ss_cart";
            String where = "itemName = '"+value+"'";
            db.runDelete(tableName, where);
            loadCart();
            double amount = getTotal();
            lbTotal.setText(format(amount));
        }catch(Exception exp){
            JOptionPane.showMessageDialog(rootPane, exp.getMessage());
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try{
            
            double paid = Double.parseDouble(txtPaid.getText());
            double total = getTotal();
            double change = paid - total;
            
            //Table Variable to print from 
            String tableName = "ss_cart";
            String columns = "*";
            String where = "";
            String order = "";
            
            if(paid<total && paid!=total){
                JOptionPane.showMessageDialog(rootPane,"Money not enough to cover item bought");
            }else{
                lbChange.setText(format(change));
                lbPayment.setText(format(paid));

                lbTitle.setText("Sub Total: N");
                txtPaid.setText(format(Double.parseDouble(txtPaid.getText()))); 
                //Print the receipt start here
                printRecept();
              
                //Prnt the receipt ends here
                Boolean ck = sell("ss_cart","ss_sold");
                if(ck==true){
                    JOptionPane.showMessageDialog(rootPane,"Take your receipt\n CHANGE "+format(change));
                    lbTitle.setText("Sub Total: N");
                    txtPaid.setText("");
                    lbTotal.setText("0.00");
                    lbChange.setText("0.00");
                    lbPayment.setText("0.00");
                    loadCart();
                    loadTable();
                }
            }
            
        }catch(Exception exp){
            JOptionPane.showMessageDialog(rootPane, exp.getMessage());
        }finally{
            txtEvent.requestFocus();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtPaidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaidKeyReleased
        
    }//GEN-LAST:event_txtPaidKeyReleased

    private void txtPaidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPaidFocusLost
       
    }//GEN-LAST:event_txtPaidFocusLost

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        try{
            String args[]= null;
            DialogReturnItems.main(args);
        }catch(Exception exp){
            JOptionPane.showMessageDialog(null,exp.getMessage());
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void btnMUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMUsersActionPerformed
        try{
            String[] args = null;
            DialogUsers.main(args);
        }catch(Exception exp){
            JOptionPane.showMessageDialog(null,exp.getMessage());
        }
    }//GEN-LAST:event_btnMUsersActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        try{
            String[] args = null;
            DialogReport.main(args);
        }catch(Exception exp){
            JOptionPane.showMessageDialog(null, exp.getMessage());
        }
    }//GEN-LAST:event_jButton20ActionPerformed

    private void btnMExpensesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMExpensesActionPerformed
        try{
            String[] args = null;
            DialogExpenses.main(args);
        }catch(Exception exp){
            JOptionPane.showMessageDialog(null,exp.getMessage());
        }
    }//GEN-LAST:event_btnMExpensesActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        loadTable();
    }//GEN-LAST:event_formFocusGained

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        loadTable();
    }//GEN-LAST:event_formWindowGainedFocus

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        try{
             
            File sourceLocation = new File("smallmarket");
            

            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            int option = fileChooser.showDialog(null,"Select Directory");
            
            if (option == JFileChooser.APPROVE_OPTION) {
                File f = fileChooser.getSelectedFile();
               
                // if the user accidently click a file, then select the parent directory.
                if (!f.isDirectory()) {
                    f = f.getParentFile();
                }
                File dir = new File(f.getAbsolutePath()+"/smallmarket");
                
                dir.mkdir();
                
                JOptionPane.showMessageDialog(rootPane, "");
                
                copyDirectory(sourceLocation ,dir);
            }    
            
            
        }catch(Exception exp){
            JOptionPane.showMessageDialog(rootPane, exp.getMessage());
        }finally{
            
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        try{
            File target = new File("").getAbsoluteFile();
            File delFile = new File("smallmarket");
            
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            int option = fileChooser.showDialog(null,"Select Directory");

            if (option == JFileChooser.APPROVE_OPTION) {
                File f = fileChooser.getSelectedFile();
               
                // if the user accidently click a file, then select the parent directory.
                if (!f.isDirectory()) {
                    f = f.getParentFile();
                }
                
                
                File tar = new File(target.getAbsolutePath()+"/smallmarket");
                
                
                JOptionPane.showMessageDialog(rootPane, ""+tar);
                
                if(delFile.exists()){
                    delFile.delete();
                    tar.mkdir();
                    copyDirectory(f, tar);
                }
               
            }
        }catch(Exception exp){
           exp.printStackTrace();
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        
    }//GEN-LAST:event_formKeyReleased

    
    private void txtEventKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEventKeyReleased
        try{
            String barCode  = txtEvent.getText();
            
            
            ResultSet rs = db.runSelect("SS_STOCKED", "*", " ITM_BARCODE = '"+barCode+"'", "");
            
            if(evt.getKeyChar()==KeyEvent.VK_ENTER){
               // JOptionPane.showMessageDialog(null,"NAME : "+barCode);
                String itemName = null;
                String unit = null;
                int     inQty ;
                String qanty = "1";
                
                rs.next();
                    itemName    = rs.getString("ITM_NAME");
                    unit        = rs.getString("ITM_UNIT");
                    inQty       = rs.getInt("ITM_QTY");
                
                    int quant = checkCart(itemName);
                    if(quant==inQty){
                        JOptionPane.showMessageDialog(rootPane, "No  enough of "+itemName+" in store");
                    }else{
                        double amt = getAmount(itemName);

                        //int quant = checkCart(itemName);

                        if(quant==0){
                            int qty = Integer.parseInt(qanty);
                            int totalAmt =(int)(qty*amt);

                            String tableName = "ss_cart";
                            String columns[] = {"itemName","unit","qty","amount"};
                            String values[] = {itemName,unit,""+qty,""+totalAmt};

                            db.runInsert(tableName, columns, values);
                        }else{
                            int qty = Integer.parseInt(qanty)+quant;
                            int totalAmt =(int)(qty*amt);

                            String tableName = "ss_cart";
                            String columns[] = {"itemName","unit","qty","amount"};
                            String values[] = {itemName,unit,""+qty,""+totalAmt};
                            String where = "itemName = '"+itemName+"'";
                            db.runUpdate(tableName, columns, values, where);

                        }
                    }

                    loadCart();
                    double amount = getTotal();
                    lbTotal.setText(format(amount));
                    txtEvent.setText("");
                
                
            }
        }catch(Exception exp){
            JOptionPane.showMessageDialog(rootPane, ""+exp.getMessage());
        }
        
    }//GEN-LAST:event_txtEventKeyReleased

    private void jPanel1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel1FocusGained
        // TODO add your handling code here:
        System.out.println("Testing the gain window on Panel");
    }//GEN-LAST:event_jPanel1FocusGained
   
    public void copyDirectory(File sourceLocation , File targetLocation)
    throws IOException {
        
        if (sourceLocation.isDirectory()) {
            if (!targetLocation.exists()) {
                targetLocation.mkdir();
            }
            
            String[] children = sourceLocation.list();
            for (int i=0; i<children.length; i++) {
                copyDirectory(new File(sourceLocation, children[i]),
                        new File(targetLocation, children[i]));
            }
        } else {
            
            InputStream in = new FileInputStream(sourceLocation);
            OutputStream out = new FileOutputStream(targetLocation);
            
            // Copy the bits from instream to outstream
            byte[] buf = new byte[10240];
            int len;
            while ((len = in.read(buf)) > 0) {
                out.write(buf, 0, len);
            }
            in.close();
            out.close();
        }
    }
    
    

   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        username = args[0];
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainActivity().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMExpenses;
    private javax.swing.JButton btnMManage;
    private javax.swing.JButton btnMPurchase;
    private javax.swing.JButton btnMSettings;
    private javax.swing.JButton btnMUsers;
    private javax.swing.JButton btnMVendor;
    private javax.swing.JButton btnManageItem;
    private javax.swing.JButton btnPurchase;
    private javax.swing.JButton btnVendor;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lbChange;
    private javax.swing.JLabel lbDate;
    private javax.swing.JLabel lbPayment;
    private javax.swing.JLabel lbTime;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JTable tbCart;
    private javax.swing.JTable tbProducts;
    private javax.swing.JTextField txtEvent;
    private javax.swing.JTextField txtPaid;
    private javax.swing.JTextField txtProduct;
    private javax.swing.JTextField txtProductAdd;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtUnit;
    // End of variables declaration//GEN-END:variables
}
